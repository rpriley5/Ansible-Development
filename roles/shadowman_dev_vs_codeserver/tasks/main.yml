---
- name: Ensure VS code-server directory exists
  ansible.builtin.file:
    path: /home/{{ dev_user }}/.vscode-server/bin/{{ commit_id }}/
    recurse: true
    state: directory
    owner: "{{ dev_user }}"

- name: Ensure VS code-server data directory exists
  ansible.builtin.file:
    path: /home/{{ dev_user }}/.vscode-server/data/Machine/
    recurse: true
    state: directory
    owner: "{{ dev_user }}"

- name: Ensure podman config location exists
  ansible.builtin.file:
    path: /home/{{ dev_user }}/.config/containers/
    recurse: true
    state: directory
    owner: "{{ dev_user }}"
  when: additionalimagestores is defined

- name: Download and extract Remote VS Code Server
  ansible.builtin.unarchive:
    src: https://update.code.visualstudio.com/commit:{{ commit_id }}/server-linux-x64/stable
    dest: /home/{{ dev_user }}/.vscode-server/bin/{{ commit_id }}/
    remote_src: true
    extra_opts:
      - --strip-components=1

- name: Ensure ansible directory exists
  ansible.builtin.file:
    path: /home/{{ dev_user }}/ansible/localplaybooks/
    recurse: true
    state: directory
    owner: "{{ dev_user }}"

- name: Ensure ansible group vars folder exists
  ansible.builtin.file:
    path: /home/{{ dev_user }}/ansible/group_vars/
    recurse: true
    state: directory
    owner: "{{ dev_user }}"

- name: Ensure ansible host vars folder exists
  ansible.builtin.file:
    path: /home/{{ dev_user }}/ansible/host_vars/
    recurse: true
    state: directory
    owner: "{{ dev_user }}"

- name: Apply VS Remove Code Server defaults to Machine directory
  ansible.builtin.template:
    src: settings.json.j2
    dest: /home/{{ dev_user }}/.vscode-server/data/Machine/settings.json
    owner: "{{ dev_user }}"
    mode: "0644"

- name: Ensure bashrc is set for user
  ansible.builtin.template:
    src: .bashrc.j2
    dest: /home/{{ dev_user }}/.bashrc
    owner: "{{ dev_user }}"
    mode: "0644"

- name: Deploy ansible-navigator config
  ansible.builtin.template:
    src: ansible-navigator.yml.j2
    dest: /home/{{ dev_user }}/ansible/ansible-navigator.yml
    owner: "{{ dev_user }}"
    mode: "0644"

- name: Deploy inventory
  ansible.builtin.copy:
    src: inventory
    dest: /home/{{ dev_user }}/ansible/inventory
    owner: "{{ dev_user }}"
    mode: "0644"
  when: deploy_inventory

- name: Deploy ansible group vars folder
  ansible.builtin.copy:
    src: files/group_vars/
    dest: /home/{{ dev_user }}/ansible/group_vars/
    owner: "{{ dev_user }}"
    mode: "0644"
  when: deploy_inventory

- name: Deploy ansible host vars folder
  ansible.builtin.copy:
    src: files/host_vars/
    dest: /home/{{ dev_user }}/ansible/host_vars/
    owner: "{{ dev_user }}"
    mode: "0644"
  when: deploy_inventory

- name: Install ansible extension
  become_user: "{{ dev_user }}"
  become: true
  ansible.builtin.command: /home/{{ dev_user }}/.vscode-server/bin/{{ commit_id }}/bin/code-server --install-extension redhat.ansible
  register: result
  changed_when: "'was successfully installed' in result.stdout"

- name: Install podman and git and python 3.11
  ansible.builtin.dnf:
    name:
      - podman
      - git
      - python3.11
      - python3.11-pip
    state: present

- name: Setup shared storage for podman images
  ansible.builtin.template:
    src: storage.conf.j2
    dest: /home/{{ dev_user }}/.config/containers/storage.conf
    owner: "{{ dev_user }}"
    mode: "0644"
  when: additionalimagestores is defined

# ansible-dev tools includes ansible-builder, ansible-core, ansible-creator, ansible-dev-environment, ansible-lint
# ansible-navigator, ansible-sign, molecule, pytest-ansible, tox-ansible
- name: Install ansible-dev-tools
  become_user: "{{ dev_user }}"
  become: true
  ansible.builtin.pip:
    name: ansible-dev-tools
    state: present
    extra_args: --user
    executable: pip3.11

- name: Allocate subuids for user
  subuid:
    user: "{{ dev_user }}"
  register: subuids

- name: Allocate subgids for user
  subgid:
    group: "{{ dev_user }}"
  register: subgids

- name: Ensure changes are applied to podman
  ansible.builtin.command: podman system migrate
  when: subuids is changed or subgids is changed
  changed_when: true

- name: Check if EE present
  become: true
  become_user: "{{ dev_user }}"
  ansible.builtin.command: podman image exists {{ ansible_image }}
  register: exists
  changed_when: exists.rc == 1
  failed_when: exists.rc > 1

- name: Pull EE only if not present
  become: true
  become_user: "{{ dev_user }}"
  ansible.builtin.command: podman pull --creds={{ username }}:{{ password }} {{ ansible_image }}
  register: ee
  changed_when: ee.rc == 0
  when:
    - exists.rc == 1
    - additionalimagestores is not defined

- name: Pull example repository
  become: true
  become_user: "{{ dev_user }}"
  ansible.builtin.git:
    repo: https://github.com/shadowman-lab/Ansible-Example.git
    dest: /home/{{ dev_user }}/ansible/ansible-example
    version: main
  when: deploy_example_repo

- name: Create an example role structure using ansible-galaxy
  ansible.builtin.command:
    cmd: ansible-galaxy init ansible-example
    chdir: /tmp/
  delegate_to: localhost
  when: deploy_ansiblegalaxy_repo
  changed_when: true

- name: Copy Example Structure to VM
  ansible.builtin.copy:
    src: /tmp/ansible-example/
    dest: /home/{{ dev_user }}/ansible/ansible-example
    owner: "{{ dev_user }}"
    mode: "0644"
  when: deploy_ansiblegalaxy_repo

- name: Check if user is lingering
  ansible.builtin.stat:
    path: /var/lib/systemd/linger/{{ dev_user }}
  register: user_lingering

- name: Enable lingering is needed
  ansible.builtin.command: loginctl enable-linger {{ dev_user }}
  when: not user_lingering.stat.exists
  changed_when: true
